#!/usr/bin/env python3
import os
import os.path
import sys
from pathlib import Path

# symlink_folder -> folder/folder.md
# folder -> folder/folder.md
# symlink_folder/name -> folder/name.md
# folder/name -> folder/name.md

BASEDIR = '~/Dropbox'
VIEWER = 'code'

base = BASEDIR
if '~' in BASEDIR:
    base = os.path.expanduser(base)

base_p = Path(base)

def resolve_symlinks(arg_folder):
    arg_p = Path(arg)
    some = base_p / arg_p.parts[0]
    if some.is_symlink():
        md_dir = arg_p.resolve()
        md_name = md_dir.parts[-1]
    return md_dir, md_name

def main():
    arg = sys.argv[1]

    # self edit
    if arg == 'add':
        os.system(f'code {__file__}')
        return

    if '/' in arg:
        fold = Path(base) / Path(arg).parts[0]
        if fold.is_symlink():
            # symlink_folder/name -> folder/name.md
            md_dir = fold.resolve()
            md_name = Path(arg).parts[-1]
            md = str(md_dir / md_name) + '.md'
            os.system(f'{VIEWER} {md}')
            sys.exit()
        else:
            # folder/name -> folder/name.md
            md_dir = fold
            md_name = Path(arg).parts[-1]
            md = str(md_dir / md_name) + '.md'
            os.system(f'{VIEWER} {md}')
            sys.exit()

    # symlink_folder -> folder/folder.md
    if Path(f'{base}/{arg}').is_symlink():
        md_dir = Path(f'{base}/{arg}').resolve()
        md_name = md_dir.parts[-1]
        md = str(md_dir / md_name) + '.md'
        os.system(f'{VIEWER} {md}')
        sys.exit()

    # folder -> folder/folder.md
    if Path(f'{base}/{arg}').is_dir():
        md = f'{base}/{arg}/{arg}.md'
        os.system(f'{VIEWER} {md}')
        sys.exit()

def show_help():
    print(f"Usage: {os.path.basename(__file__)} <command>")
    sys.exit()

if __name__ == "__main__":
    if len(sys.argv) == 1:
        show_help()

    main()
